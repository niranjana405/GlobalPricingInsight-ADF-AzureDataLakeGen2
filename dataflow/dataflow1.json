{
	"name": "dataflow1",
	"properties": {
		"folder": {
			"name": "Working-labs"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SOURCE_DAILYPRICING_lab1",
						"type": "DatasetReference"
					},
					"name": "dfsourcedailypricinglab1"
				},
				{
					"dataset": {
						"referenceName": "DS_dim_state_source_lookup",
						"type": "DatasetReference"
					},
					"name": "sourcedimstatelookup"
				},
				{
					"dataset": {
						"referenceName": "DS_source_Surrogate_key_state_id_dailypricing",
						"type": "DatasetReference"
					},
					"name": "sourcemaxstateid"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_sink_dailypricing_lab1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "selectstatename"
				},
				{
					"name": "aggregateuniquestatenames"
				},
				{
					"name": "selectexcludecountstatename"
				},
				{
					"name": "surrogateKeygeneratestateid"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "selectdimstatelookup"
				},
				{
					"name": "lookupNEWSTATENAME"
				},
				{
					"name": "filternewstatename"
				},
				{
					"name": "joinmaxstateidvalue"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DATE_OF_PRICING as string,",
				"          ROW_ID as string,",
				"          STATE_NAME as string,",
				"          MARKET_NAME as string,",
				"          PRODUCTGROUP_NAME as string,",
				"          PRODUCT_NAME as string,",
				"          VARIETY as string,",
				"          ORIGIN as string,",
				"          ARRIVAL_IN_TONNES as string,",
				"          MINIMUM_PRICE as string,",
				"          MAXIMUM_PRICE as string,",
				"          MODAL_PRICE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dfsourcedailypricinglab1",
				"source(output(",
				"          STATE_NAME as string,",
				"          STATE_ID as integer,",
				"          DWH_CREATED_DATE as timestamp,",
				"          DWH_UPDATED_DATE as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourcedimstatelookup",
				"source(output(",
				"          max_state_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select max(state_id) max_state_id  from [reporting].[DIM_STATE]',",
				"     format: 'query') ~> sourcemaxstateid",
				"dfsourcedailypricinglab1 select(mapColumn(",
				"          STATE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectstatename",
				"selectstatename aggregate(groupBy(STATE_NAME),",
				"     COUNT_STATE_NAME = count(STATE_NAME)) ~> aggregateuniquestatenames",
				"aggregateuniquestatenames select(mapColumn(",
				"          STATE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectexcludecountstatename",
				"joinmaxstateidvalue keyGenerate(output(STATE_ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKeygeneratestateid",
				"surrogateKeygeneratestateid derive(DWH_CREATED_DATE = currentDate(),",
				"          DWH_UPDATED_DATE = currentDate(),",
				"          NEW_STATE_ID = max_state_id +STATE_ID) ~> derivedColumn1",
				"sourcedimstatelookup select(mapColumn(",
				"          LOOKUP_STATE_NAME = STATE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectdimstatelookup",
				"selectexcludecountstatename, selectdimstatelookup lookup(STATE_NAME == LOOKUP_STATE_NAME,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupNEWSTATENAME",
				"lookupNEWSTATENAME filter(isNull(LOOKUP_STATE_NAME)) ~> filternewstatename",
				"filternewstatename, sourcemaxstateid join(!(isNull(STATE_NAME) && isNull(max_state_id)),",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinmaxstateidvalue",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          STATE_NAME as string,",
				"          STATE_ID as integer,",
				"          DWH_CREATED_DATE as timestamp,",
				"          DWH_UPDATED_DATE as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}